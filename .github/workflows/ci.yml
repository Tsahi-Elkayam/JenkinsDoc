name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Run tests
      run: |
        python tests/run_tests.py

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint black isort mypy

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=scraper/venv,venv,ENV,env,.git,__pycache__
        # Exit-zero treats all errors as warnings. Line length set to 120
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=120 --statistics --exclude=scraper/venv,venv,ENV,env,.git,__pycache__

    - name: Check code formatting with Black
      run: |
        black --check --line-length=120 --exclude='/(\.git|\.venv|venv|ENV|env|__pycache__|\.pytest_cache|\.mypy_cache|scraper/venv)/' .

    - name: Check import sorting with isort
      run: |
        isort --check-only --profile black --line-length=120 --skip-glob="*/venv/*" --skip-glob="*/__pycache__/*" .

    - name: Type check with mypy
      run: |
        mypy --ignore-missing-imports --exclude='(venv|ENV|env|__pycache__|\.pytest_cache)' . || true

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Security check with bandit
      run: |
        bandit -r . -f json -o bandit-report.json --exclude ./venv,./ENV,./env,./scraper/venv,./tests || true
        bandit -r . --exclude ./venv,./ENV,./env,./scraper/venv,./tests || true

    - name: Check dependencies with safety
      run: |
        pip freeze | safety check --stdin || true
